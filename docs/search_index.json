[["fundamentos.html", "Capítulo 2 Fundamentos Descriptivos 2.1 Promedio Móvil 2.2 Rezagos y autocorrelación 2.3 Estacionariedad y diferenciación 2.4 Transformación Box-Cox", " Capítulo 2 Fundamentos Descriptivos Variables de la base de datos colnames(datos) ## [1] &quot;nombremunicipio&quot; &quot;codigomunicipio&quot; ## [3] &quot;ubicacion&quot; &quot;nombreregion&quot; ## [5] &quot;codigoregion&quot; &quot;anio&quot; ## [7] &quot;causamortalidad&quot; &quot;tipopoblacionobjetivo&quot; ## [9] &quot;numeropoblacionobjetivo&quot; &quot;numerocasos&quot; 3 primeros Registros de la base de datos head(datos,3) ## # A tibble: 3 × 10 ## nombremunicipio codigomunicipio ubicacion nombreregion codigoregion anio ## &lt;chr&gt; &lt;dbl&gt; &lt;chr&gt; &lt;chr&gt; &lt;dbl&gt; &lt;dbl&gt; ## 1 Abejorral 5002 POINT (-75.42… ORIENTE 7 2005 ## 2 Abriaquí 5004 POINT (-76.06… OCCIDENTE 6 2005 ## 3 Alejandría 5021 POINT (-75.14… ORIENTE 7 2005 ## # ℹ 4 more variables: causamortalidad &lt;chr&gt;, tipopoblacionobjetivo &lt;chr&gt;, ## # numeropoblacionobjetivo &lt;dbl&gt;, numerocasos &lt;dbl&gt; número total de registros nrow(datos) ## [1] 2250 2.0.1 EXPLORACION DE LOS DATOS Se inicia con la exploracion del Dataset, asi como con el resumen estadistico Estructura del dataset # kable(head(datos), format = &quot;markdown&quot;) nombremunicipio codigomunicipio ubicacion nombreregion codigoregion anio causamortalidad tipopoblacionobjetivo numeropoblacionobjetivo numerocasos Abejorral 5002 POINT (-75.427045 5.79145) ORIENTE 7 2005 Suicidios Poblacion total 20249 2 Abriaquí 5004 POINT (-76.064563 6.63197) OCCIDENTE 6 2005 Suicidios Poblacion total 269 0 Alejandría 5021 POINT (-75.141258 6.376923) ORIENTE 7 2005 Suicidios Poblacion total 3816 0 Amagá 5030 POINT (-75.703216 6.04063) SUROESTE 8 2005 Suicidios Poblacion total 27155 0 Amalfi 5031 POINT (-75.075028 6.907385) NORDESTE 4 2005 Suicidios Poblacion total 20525 2 Andes 5034 POINT (-75.877699 5.655629) SUROESTE 8 2005 Suicidios Poblacion total 41591 6 Se realiza la verificación de valores nulos por cada una de las variables que conforman la data. # Verificar valores nulos sum(is.na(datos)) ## [1] 0 # Verificar la cantidad de valores nulos por columna colSums(is.na(datos)) ## nombremunicipio codigomunicipio ubicacion ## 0 0 0 ## nombreregion codigoregion anio ## 0 0 0 ## causamortalidad tipopoblacionobjetivo numeropoblacionobjetivo ## 0 0 0 ## numerocasos ## 0 grafico_faltantes &lt;-md.pattern(datos, rotate.names = TRUE) ## /\\ /\\ ## { `---&#39; } ## { O O } ## ==&gt; V &lt;== No need for mice. This data set is completely observed. ## \\ \\|/ / ## `-----&#39; #Construcción de la serie temporal df &lt;- datos %&gt;% mutate( numerocasos = as.numeric(numerocasos), numeropoblacionobjetivo = as.numeric(numeropoblacionobjetivo), tasa_suicidios = numerocasos / numeropoblacionobjetivo * 1000 ) df &lt;- df %&gt;% mutate(tasa_suicidios = numerocasos / numeropoblacionobjetivo * 100000) # Agrupar por año serie_anual &lt;- df %&gt;% group_by(anio) %&gt;% summarise(tasa_promedio = mean(tasa_suicidios, na.rm = TRUE)) # Verificar la serie print(serie_anual) ## # A tibble: 18 × 2 ## anio tasa_promedio ## &lt;dbl&gt; &lt;dbl&gt; ## 1 2005 14.1 ## 2 2006 9.20 ## 3 2007 14.3 ## 4 2008 8.40 ## 5 2009 14.8 ## 6 2010 8.04 ## 7 2011 8.67 ## 8 2012 10.7 ## 9 2013 9.25 ## 10 2014 12.4 ## 11 2015 16.1 ## 12 2016 10.1 ## 13 2017 14.7 ## 14 2018 148. ## 15 2019 45.8 ## 16 2020 11.6 ## 17 2021 18.6 ## 18 2022 14.7 suicidios_anuales &lt;- datos %&gt;% group_by(anio) %&gt;% summarise(total_suicidios = sum(numerocasos, na.rm = TRUE)) ggplot(suicidios_anuales, aes(x = anio, y = total_suicidios)) + geom_line(color = &quot;steelblue&quot;) + geom_point(color = &quot;darkred&quot;) + labs(title = &quot;Número anual de suicidios en Antioquia&quot;, x = &quot;Año&quot;, y = &quot;Total de suicidios&quot;) 2.1 Promedio Móvil #Promedio móvil suicidios_anuales &lt;- suicidios_anuales %&gt;% mutate(promedio_movil = zoo::rollmean(total_suicidios, k = 3, fill = NA)) ggplot(suicidios_anuales, aes(x = anio)) + geom_line(aes(y = total_suicidios), color = &quot;gray&quot;) + geom_line(aes(y = promedio_movil), color = &quot;blue&quot;) + labs(title = &quot;Promedio móvil de suicidios (k = 3)&quot;, y = &quot;Número de suicidios&quot;) 2.2 Rezagos y autocorrelación ts_suicidios &lt;- ts(suicidios_anuales$total_suicidios, start = min(suicidios_anuales$anio), frequency = 1) # Autocorrelación forecast::ggAcf(ts_suicidios) + ggtitle(&quot;Función de Autocorrelación (ACF)&quot;) # Descomposición # Si tuvieras frecuencia mensual: frequency = 12 #decomposicion &lt;- decompose(ts_suicidios, type = &quot;additive&quot;) #plot(decomposicion) 2.3 Estacionariedad y diferenciación adf.test(ts_suicidios) # Prueba de Dickey-Fuller aumentada ## ## Augmented Dickey-Fuller Test ## ## data: ts_suicidios ## Dickey-Fuller = -0.41096, Lag order = 2, p-value = 0.9788 ## alternative hypothesis: stationary # Si no es estacionaria, aplicar diferenciación ts_diff &lt;- diff(ts_suicidios) plot(ts_diff, main = &quot;Serie diferenciada&quot;, ylab = &quot;Diferencia de suicidios&quot;) adf.test(ts_diff) # Verificar estacionariedad después ## ## Augmented Dickey-Fuller Test ## ## data: ts_diff ## Dickey-Fuller = -2.2107, Lag order = 2, p-value = 0.4921 ## alternative hypothesis: stationary 2.4 Transformación Box-Cox lambda &lt;- BoxCox.lambda(ts_suicidios) ts_boxcox &lt;- BoxCox(ts_suicidios, lambda) autoplot(ts_boxcox) + ggtitle(&quot;Serie transformada con Box-Cox&quot;) "]]
