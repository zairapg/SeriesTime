[["fundamentos.html", "Capítulo 2 Fundamentos Descriptivos 2.1 Exploracion de Datos 2.2 Promedio Movil. 2.3 Rezagos y autocorrelación 2.4 Estacionariedad y diferenciación 2.5 Transformación Box-Cox", " Capítulo 2 Fundamentos Descriptivos Variables de la base de datos colnames(datos) ## [1] &quot;nombremunicipio&quot; &quot;codigomunicipio&quot; ## [3] &quot;ubicacion&quot; &quot;nombreregion&quot; ## [5] &quot;codigoregion&quot; &quot;anio&quot; ## [7] &quot;causamortalidad&quot; &quot;tipopoblacionobjetivo&quot; ## [9] &quot;numeropoblacionobjetivo&quot; &quot;numerocasos&quot; 3 primeros Registros de la base de datos head(datos,3) ## # A tibble: 3 × 10 ## nombremunicipio codigomunicipio ubicacion nombreregion codigoregion anio ## &lt;chr&gt; &lt;dbl&gt; &lt;chr&gt; &lt;chr&gt; &lt;dbl&gt; &lt;dbl&gt; ## 1 Abejorral 5002 POINT (-75.42… ORIENTE 7 2005 ## 2 Abriaquí 5004 POINT (-76.06… OCCIDENTE 6 2005 ## 3 Alejandría 5021 POINT (-75.14… ORIENTE 7 2005 ## # ℹ 4 more variables: causamortalidad &lt;chr&gt;, tipopoblacionobjetivo &lt;chr&gt;, ## # numeropoblacionobjetivo &lt;dbl&gt;, numerocasos &lt;dbl&gt; número total de registros nrow(datos) ## [1] 2250 2.1 Exploracion de Datos Se inicia con la exploracion del Dataset, asi como con el resumen estadistico Estructura del dataset # kable(head(datos), format = &quot;markdown&quot;) nombremunicipio codigomunicipio ubicacion nombreregion codigoregion anio causamortalidad tipopoblacionobjetivo numeropoblacionobjetivo numerocasos Abejorral 5002 POINT (-75.427045 5.79145) ORIENTE 7 2005 Suicidios Poblacion total 20249 2 Abriaquí 5004 POINT (-76.064563 6.63197) OCCIDENTE 6 2005 Suicidios Poblacion total 269 0 Alejandría 5021 POINT (-75.141258 6.376923) ORIENTE 7 2005 Suicidios Poblacion total 3816 0 Amagá 5030 POINT (-75.703216 6.04063) SUROESTE 8 2005 Suicidios Poblacion total 27155 0 Amalfi 5031 POINT (-75.075028 6.907385) NORDESTE 4 2005 Suicidios Poblacion total 20525 2 Andes 5034 POINT (-75.877699 5.655629) SUROESTE 8 2005 Suicidios Poblacion total 41591 6 Se realiza la verificación de valores nulos por cada una de las variables que conforman la data. # Verificar valores nulos sum(is.na(datos)) ## [1] 0 # Verificar la cantidad de valores nulos por columna colSums(is.na(datos)) ## nombremunicipio codigomunicipio ubicacion ## 0 0 0 ## nombreregion codigoregion anio ## 0 0 0 ## causamortalidad tipopoblacionobjetivo numeropoblacionobjetivo ## 0 0 0 ## numerocasos ## 0 grafico_faltantes &lt;-md.pattern(datos, rotate.names = TRUE) ## /\\ /\\ ## { `---&#39; } ## { O O } ## ==&gt; V &lt;== No need for mice. This data set is completely observed. ## \\ \\|/ / ## `-----&#39; #Construcción de la serie temporal df &lt;- datos %&gt;% mutate( numerocasos = as.numeric(numerocasos), numeropoblacionobjetivo = as.numeric(numeropoblacionobjetivo), tasa_suicidios = numerocasos / numeropoblacionobjetivo * 1000 ) df &lt;- df %&gt;% mutate(tasa_suicidios = numerocasos / numeropoblacionobjetivo * 100000) # Agrupar por año serie_anual &lt;- df %&gt;% group_by(anio) %&gt;% summarise(tasa_promedio = mean(tasa_suicidios, na.rm = TRUE)) # Verificar la serie print(serie_anual) ## # A tibble: 18 × 2 ## anio tasa_promedio ## &lt;dbl&gt; &lt;dbl&gt; ## 1 2005 14.1 ## 2 2006 9.20 ## 3 2007 14.3 ## 4 2008 8.40 ## 5 2009 14.8 ## 6 2010 8.04 ## 7 2011 8.67 ## 8 2012 10.7 ## 9 2013 9.25 ## 10 2014 12.4 ## 11 2015 16.1 ## 12 2016 10.1 ## 13 2017 14.7 ## 14 2018 148. ## 15 2019 45.8 ## 16 2020 11.6 ## 17 2021 18.6 ## 18 2022 14.7 suicidios_anuales &lt;- datos %&gt;% group_by(anio) %&gt;% summarise(total_suicidios = sum(numerocasos, na.rm = TRUE)) ggplot(suicidios_anuales, aes(x = anio, y = total_suicidios)) + geom_line(color = &quot;steelblue&quot;) + geom_point(color = &quot;darkred&quot;) + labs(title = &quot;Número anual de suicidios en Antioquia&quot;, x = &quot;Año&quot;, y = &quot;Total de suicidios&quot;) La serie muestra una tendencia creciente clara a partir de 2014, con un aumento sostenido en el número de casos de suicidio. Entre 2005 y 2013, los valores se mantienen relativamente estables,con pequeñas fluctuaciones. Desde 2014 se observa una aceleración en el crecimiento,con picos notables en 2018, 2021 y 2022. Esto sugiere la presencia de una tendencia no estacionaria, lo que indica que el uso de técnicas como la diferenciación o modelado ARIMA es apropiado para pronóstico y análisis más avanzado. La gráfica no evidencia patrones cíclicos repetitivos anuales, lo cual es esperable al trabajar con datos anuales. Aunque hay un patrón creciente, se observan algunos retrocesos puntuales, como en 2020 (probablemente asociado al impacto de la pandemia). Estos descensos temporales podrían representar factores exógenos o eventos sociales que afectaron los reportes o las causas de suicidio. Estas irregularidades justifican el uso de métodos de suaviza miento como promedios móviles para atenuar las variaciones y destacar la tendencia. 2.2 Promedio Movil. Promedio móvil del número de suicidios por año en Antioquia (2005–2022) #Promedio móvil suicidios_anuales &lt;- suicidios_anuales %&gt;% mutate(promedio_movil = zoo::rollmean(total_suicidios, k = 3, fill = NA)) ggplot(suicidios_anuales, aes(x = anio)) + geom_line(aes(y = total_suicidios), color = &quot;gray&quot;) + geom_line(aes(y = promedio_movil), color = &quot;blue&quot;) + labs(title = &quot;Promedio móvil de suicidios (k = 3)&quot;, y = &quot;Número de suicidios&quot;) El anterior gráfico presenta el promedio móvil del número de suicidios por año en Antioquia desde 2005, utilizando una ventana de suavizamiento de k=3. De las cual se puede describir lo siguiente: La línea gris representa los datos anuales reales de suicidios. La línea azul corresponde al promedio móvil, que suaviza las fluctuaciones anuales para destacar la tendencia general. Entre 2005 y 2013, el número de suicidios se mantuvo relativamente estable. A partir de 2014, se observa una tendencia creciente clara, que se intensifica progresivamente hasta 2022. El promedio móvil permite visualizar un crecimiento sostenido, especialmente desde 2015 en adelante. Puedo deducir algunas interpretaciones como que el aumento continuo podría estar relacionado con factores estructurales como problemas de salud mental, desigualdades sociales, impactos económicos o, en los años más recientes, efectos derivados de la pandemia. 2.3 Rezagos y autocorrelación ts_suicidios &lt;- ts(suicidios_anuales$total_suicidios, start = min(suicidios_anuales$anio), frequency = 1) # Autocorrelación forecast::ggAcf(ts_suicidios) + ggtitle(&quot;Función de Autocorrelación (ACF)&quot;) # Descomposición # Si tuvieras frecuencia mensual: frequency = 12 #decomposicion &lt;- decompose(ts_suicidios, type = &quot;additive&quot;) #plot(decomposicion) Interpretación de la Función de Autocorrelación (ACF) Se observa una autocorrelación positiva y significativa en los primeros rezagos: Rezago 1: aproximadamente 0.75 Rezago 2: aproximadamente 0.60 Rezago 3: ligeramente superior a 0.45 A partir del rezago 4, la autocorrelación disminuye progresivamente y cae dentro del intervalo de no significancia (delimitado por las líneas azules en el gráfico). Esto indica que los valores actuales del número de suicidios están fuertemente correlacionados con los valores registrados en los últimos 1 a 3 años. Conclusiones: Existe una dependencia temporal significativa, especialmente a corto plazo. La estructura de autocorrelación sugiere que un modelo autoregresivo simple, como AR(1) o AR(2), podría ser adecuado para capturar la dinámica de la serie. No se identifican patrones de estacionalidad, ya que no se observan picos regulares a intervalos fijos (por ejemplo, cada 12 rezagos, como sería típico en series mensuales con estacionalidad anual). 2.4 Estacionariedad y diferenciación Test de Dickey-Fuller Aumentado (ADF) adf.test(ts_suicidios) # Prueba de Dickey-Fuller aumentada ## ## Augmented Dickey-Fuller Test ## ## data: ts_suicidios ## Dickey-Fuller = -0.41096, Lag order = 2, p-value = 0.9788 ## alternative hypothesis: stationary Resultado del test ADF: Estadístico Dickey-Fuller: –0.41096 Orden de rezago utilizado: 2 Valor p: 0.9788 Hipótesis alternativa: la serie es estacionaria Interpretación: El valor p obtenido es 0.9788, muy superior al nivel de significancia típico (0.05). Por lo tanto, no se rechaza la hipótesis nula del test ADF, que plantea que la serie tiene una raíz unitaria (es decir, no es estacionaria). Esto implica que la serie ts_suicidios no es estacionaria, lo cual sugiere que: Puede haber tendencias o patrones temporales no constantes. No es adecuada para modelos que requieren estacionariedad (como ARIMA) sin transformación previa. # SComo no es estacionaria, se aplica diferenciación ts_diff &lt;- diff(ts_suicidios) plot(ts_diff, main = &quot;Serie diferenciada&quot;, ylab = &quot;Diferencia de suicidios&quot;) La gráfica anterior muestra las diferencias anuales en el número de suicidios, lo que permite analizar el comportamiento de los cambios interanuales. En comparación con la serie original, podemos| obseravr que el comportamiento ahora es más estable, y se ha eliminado la tendencia creciente previamente observada. No obstante, se evidencian fluctuaciones amplias en ciertos periodos, especialmente después de 2014, lo que podría reflejar cambios estructurales o eventos atípicos en esos años. A pesar de estas variaciones, no se aprecia una tendencia sostenida en las diferencias, lo que sugiere que la serie podría haberse estacionarizado tras aplicar la primera diferencia. La ausencia de estacionalidad sugiere que no es necesario aplicar técnicas de descomposición estacional ni modelos SARIMA. Al tratarse de una serie anual, la estacionalidad no es relevante. El análisis debe centrarse en la tendencia y posibles componentes cíclicos de largo plazo. adf.test(ts_diff) # Verifica estacionariedad después ## ## Augmented Dickey-Fuller Test ## ## data: ts_diff ## Dickey-Fuller = -2.2107, Lag order = 2, p-value = 0.4921 ## alternative hypothesis: stationary Resultados del Test de Dickey-Fuller Aumentado (ADF) Al aplicar el test ADF a la serie diferenciada cuyo objetivo era evaluar su estacionariedad. Lo cual genera los siguientes resultados: Estadístico ADF: –2.2107 Orden de rezago: 2 Valor p: 0.4921 Hipótesis alternativa: la serie es estacionaria Interpretación: El valor p obtenido (0.4921) es significativamente mayor que el umbral común de significancia (0.05), por lo tanto, no se rechaza la hipótesis nula de no estacionariedad. Esto sugiere que, incluso después de aplicar una primera diferenciación, la serie aún no cumple con los criterios estadísticos de estacionariedad según el test ADF. 2.5 Transformación Box-Cox lambda &lt;- BoxCox.lambda(ts_suicidios) ts_boxcox &lt;- BoxCox(ts_suicidios, lambda) autoplot(ts_boxcox) + ggtitle(&quot;Serie transformada con Box-Cox&quot;) "],["holt_winter.html", "Capítulo 3 Modelado con Holt Winters y Suavizante 3.1 Metodologia de Holt Winters", " Capítulo 3 Modelado con Holt Winters y Suavizante 3.1 Metodologia de Holt Winters El análisis de series temporales es una técnica poderosa en la ciencia de datos que permite descomponer datos históricos en tendencia, estacionalidad y ruido aleatorio, con el fin de predecir el comportamiento futuro de una variable. En el contexto de salud pública, modelar y pronosticar la tasa de suicidios es fundamental para diseñar políticas de prevención y respuesta oportuna. El método de Holt-Winters (también llamado suavizamiento exponencial triple) es especialmente útil cuando una serie muestra tanto tendencia como estacionalidad, aspectos frecuentes en datos reales como los de mortalidad o salud mental. El modelo se estructura en torno a tres componentes: Nivel (valor base) Tendencia (incremento o decremento) Estacionalidad (comportamiento cíclico) Características de los datos La serie temporal usada representa la tasa anual de suicidios por 100.000 habitantes en Antioquia desde 2005 hasta 2022. Se trata de una serie anual (frecuencia 1), por lo cual no se espera una estacionalidad periódica evidente, aunque sí se observa una tendencia creciente a partir de 2014. Por esta razón, se aplica el método Holt (sin componente estacional), una variante del modelo de Holt-Winters que ajusta nivel y tendencia, pero no estacionalidad. # Aplicar método Holt (sin estacionalidad) modelo_holt &lt;- holt(ts_suicidios, h = 5) # Pronóstico a 5 años # Graficar resultados autoplot(modelo_holt) + labs(title = &quot;Pronóstico con el método de Holt&quot;, subtitle = &quot;Tasa de suicidios por 100,000 habitantes en Antioquia&quot;, y = &quot;Tasa de suicidios&quot;, x = &quot;Año&quot;) + theme_minimal() En este análisis, aplicamos el modelo de Holt a la serie de tiempo anual de la tasa de suicidios por 100.000 habitantes en Antioquia desde 2005 hasta 2022. Como se observa en el gráfico, existe una tendencia creciente notable a partir de 2015, lo cual justifica plenamente el uso de esta metodología. La gráfica muestra: La línea negra: evolución histórica de la tasa. La línea azul: pronóstico para los próximos cinco años (2023–2027). Las áreas sombreadas: intervalos de confianza, que permiten visualizar la incertidumbre en los valores proyectados. accuracy(modelo_holt) ## ME RMSE MAE MPE MAPE MASE ## Training set 6.256508 22.78625 17.07406 1.475734 4.447111 0.7908963 ## ACF1 ## Training set -0.002604474 El MAPE de 4.45% indica que el modelo tiene muy buena precisión para pronosticar la tasa de suicidios, siendo este valor aceptable para aplicaciones sociales. El MASE &lt; 1 significa que el modelo de Holt supera a un modelo ingenuo (que simplemente usaría el último valor observado como predicción). La autocorrelación casi nula en los residuos sugiere que no queda estructura sin modelar, lo cual respalda la validez del modelo. "],["Modelo_lineal_estacionariedad.html", "Capítulo 4 Análisis Temporal: Modelos Lineales y Estacionariedad", " Capítulo 4 Análisis Temporal: Modelos Lineales y Estacionariedad # Agrupamos datos por año suicidios_por_ano &lt;- datos %&gt;% group_by(anio) %&gt;% summarise(suicidios = sum(numerocasos), poblacion = sum(numeropoblacionobjetivo), tasa_suicidios = (suicidios / poblacion) * 100000) # Ajuste de escalas: llevar la tasa al rango del número de suicidios escala &lt;- max(suicidios_por_ano$suicidios) / max(suicidios_por_ano$tasa_suicidios) # Crear nueva columna con la tasa escalada suicidios_por_ano &lt;- suicidios_por_ano %&gt;% mutate(tasa_escalada = tasa_suicidios * escala) # Graficar ggplot(suicidios_por_ano, aes(x = anio)) + geom_line(aes(y = suicidios, color = &quot;Suicidios absolutos&quot;), size = 1.2) + geom_line(aes(y = tasa_escalada, color = &quot;Tasa por 100 mil (escalada)&quot;), linetype = &quot;dashed&quot;, size = 1.2) + scale_color_manual(values = c(&quot;Suicidios absolutos&quot; = &quot;steelblue&quot;, &quot;Tasa por 100 mil (escalada)&quot; = &quot;darkred&quot;)) + labs(title = &quot;Evolución anual de suicidios en Antioquia (2005–2022)&quot;, x = &quot;Año&quot;, y = &quot;Número de suicidios / Tasa escalada&quot;, color = &quot;Indicador&quot;) + theme_minimal() Evolución de los suicidios y tasa por 100.000 habitantes entre (2005–2022) La figura anterior presenta la evolución anual del número total de suicidios y la tasa por cada 100.000 habitantes en el departamento de Antioquia, entre los años 2005 y 2022. Se observa un aumento sostenido tanto en el número absoluto de suicidios como en la tasa ajustada por población, especialmente a partir del año 2014. Esta tendencia sugiere que el fenómeno no se debe exclusivamente al crecimiento poblacional, sino que podría estar asociado a otros factores estructurales o sociales. La tasa por 100.000 habitantes permite controlar este efecto demográfico y revela un comportamiento creciente, lo cual puede representar una señal de alerta en salud pública. # Ajuste de modelo lineal modelo_lineal &lt;- lm(suicidios ~ anio, data = suicidios_por_ano) summary(modelo_lineal) ## ## Call: ## lm(formula = suicidios ~ anio, data = suicidios_por_ano) ## ## Residuals: ## Min 1Q Median 3Q Max ## -60.685 -23.252 -3.389 23.692 51.585 ## ## Coefficients: ## Estimate Std. Error t value Pr(&gt;|t|) ## (Intercept) -22961.257 2988.829 -7.682 9.34e-07 *** ## anio 11.591 1.484 7.809 7.58e-07 *** ## --- ## Signif. codes: 0 &#39;***&#39; 0.001 &#39;**&#39; 0.01 &#39;*&#39; 0.05 &#39;.&#39; 0.1 &#39; &#39; 1 ## ## Residual standard error: 32.67 on 16 degrees of freedom ## Multiple R-squared: 0.7921, Adjusted R-squared: 0.7792 ## F-statistic: 60.98 on 1 and 16 DF, p-value: 7.579e-07 El modelo lineal ajustado muestra una tendencia creciente y significativa en el número de suicidios en Antioquia entre 2005 y 2022, con un aumento promedio de 11.5 casos por año. El modelo explica un 79% de la variabilidad observada, lo cual indica un buen ajuste. Esta evidencia respalda la necesidad de examinar factores sociales, económicos y de salud pública que puedan estar contribuyendo a este preocupante incremento. ggplot(suicidios_por_ano, aes(x = anio, y = suicidios)) + geom_point() + geom_smooth(method = &quot;lm&quot;, se = TRUE, color = &quot;blue&quot;) + labs(title = &quot;Tendencia lineal de suicidios en el tiempo&quot;, x = &quot;Año&quot;, y = &quot;Número de suicidios&quot;) + theme_minimal() ## `geom_smooth()` using formula = &#39;y ~ x&#39; En la grafica se observa un incremento sostenido en el número de suicidios a lo largo del tiempo.La pendiente positiva de la línea azul indica una tendencia creciente. El intervalo de confianza sugiere que esta tendencia es estadísticamente significativa. Los valores extremos hacia el final (2022) muestran un posible aumento más acelerado que el promedio lineal. # Serie original ts_suicidios &lt;- ts(suicidios_por_ano$suicidios, start = 2005) # Transformación Box-Cox y diferenciación (si no es estacionaria) lambda &lt;- BoxCox.lambda(ts_suicidios) ts_bc &lt;- BoxCox(ts_suicidios, lambda) ts_dif &lt;- diff(ts_bc) # Verificar estacionariedad nuevamente adf.test(ts_dif) ## ## Augmented Dickey-Fuller Test ## ## data: ts_dif ## Dickey-Fuller = -2.2002, Lag order = 2, p-value = 0.4961 ## alternative hypothesis: stationary # Ajustar modelo ARIMA modelo_arima &lt;- auto.arima(ts_bc) summary(modelo_arima) ## Series: ts_bc ## ARIMA(0,1,0) with drift ## ## Coefficients: ## drift ## 1.6222 ## s.e. 0.8637 ## ## sigma^2 = 13.47: log likelihood = -45.71 ## AIC=95.42 AICc=96.28 BIC=97.09 ## ## Training set error measures: ## ME RMSE MAE MPE MAPE MASE ## Training set 0.003864451 3.460626 3.040904 -0.2617587 3.878032 1.002047 ## ACF1 ## Training set -0.1775929 # Pronóstico forecast_arima &lt;- forecast(modelo_arima, h = 5) autoplot(forecast_arima) + labs(title = &quot;Pronóstico con modelo ARIMA (estacionario transformado)&quot;) "],["Prophet.html", "Capítulo 5 Aplicación del Modelo Prophet 5.1 Justificación Regresiva y Ajuste Estacionario en Series Temporales", " Capítulo 5 Aplicación del Modelo Prophet 5.1 Justificación Regresiva y Ajuste Estacionario en Series Temporales datos_prophet &lt;- suicidios_por_ano %&gt;% mutate(ds = as.Date(paste0(anio, &quot;-01-01&quot;)), y = tasa_suicidios) %&gt;% select(ds, y) # Crear modelo y entrenar modelo_prophet &lt;- prophet(datos_prophet) ## Disabling weekly seasonality. Run prophet with weekly.seasonality=TRUE to override this. ## Disabling daily seasonality. Run prophet with daily.seasonality=TRUE to override this. ## n.changepoints greater than number of observations. Using 13 # Crear data futura (5 años más) futuro &lt;- make_future_dataframe(modelo_prophet, periods = 5, freq = &quot;year&quot;) # Predecir pronostico &lt;- predict(modelo_prophet, futuro) # Graficar resultados plot(modelo_prophet, pronostico) + ggtitle(&quot;Proyección de la tasa de suicidios en Antioquia con Prophet&quot;) Línea azul (tendencia): muestra la predicción central de Prophet basada en la tendencia de los datos históricos. En este caso, la tasa de suicidios proyecta una tendencia ligeramente creciente. Sombra azul (intervalo de incertidumbre): representa el intervalo de confianza del 95%. Indica que hay incertidumbre creciente hacia el futuro (lo cual es normal). Puntos negros: son los valores reales observados. En general, están bien alineados con la tendencia estimada, lo cual sugiere un buen ajuste del modelo.—– &lt;&lt;&lt;&lt;&lt;&lt;&lt; HEAD prophet_plot_components(modelo_prophet, pronostico) "],["Rneuronales.html", "Capítulo 6 Redes Neuronales 6.1 Redes Neuronales: ELMAN 6.2 Redes Neuronales: JORDAN 6.3 Desempeño de redes ELMAN y JORDAN", " Capítulo 6 Redes Neuronales 6.1 Redes Neuronales: ELMAN Una Red Neuronal Recurrente (RNN, por sus siglas en inglés) es un tipo de red neuronal que se utiliza para procesar datos secuenciales, como texto, audio o series temporales. A diferencia de las redes neuronales tradicionales, las RNN tienen conexiones que permiten que la información fluya en ciclos, lo que les otorga la capacidad de “recordar” información de entradas anteriores. Esto las hace especialmente útiles para tareas como la traducción automática, el análisis de sentimientos y la predicción de series temporales. La arquitectura de Elman es una variante simple de las RNN, propuesta por Jeffrey Elman en 1990. Su principal característica es la inclusión de una capa de “contexto” que almacena una copia de las activaciones de la capa oculta en el paso de tiempo anterior. # Agrupar por año para todo Antioquia serie_anual &lt;- datos %&gt;% group_by(anio) %&gt;% summarise( total_poblacion = sum(numeropoblacionobjetivo, na.rm = TRUE), total_casos = sum(numerocasos, na.rm = TRUE) ) %&gt;% arrange(anio) # Verificar la serie print(serie_anual) ## # A tibble: 18 × 3 ## anio total_poblacion total_casos ## &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; ## 1 2005 5294419 327 ## 2 2006 5037432 328 ## 3 2007 5064900 296 ## 4 2008 5162473 338 ## 5 2009 5309573 335 ## 6 2010 5445884 326 ## 7 2011 5709729 325 ## 8 2012 5496977 329 ## 9 2013 5654138 330 ## 10 2014 5942561 323 ## 11 2015 5856727 374 ## 12 2016 6102826 400 ## 13 2017 6000779 392 ## 14 2018 6269168 434 ## 15 2019 6252738 476 ## 16 2020 6357981 453 ## 17 2021 6491985 488 ## 18 2022 6567697 528 # Crear objeto ts ts_casos &lt;- ts(serie_anual$total_casos, start = min(serie_anual$anio), frequency = 1) # Gráfico de la serie plot(ts_casos, main = &quot;Número de suicidios anuales en Antioquia&quot;, ylab = &quot;Casos&quot;, xlab = &quot;Año&quot;) # Normalización x &lt;- serie_anual$total_casos x_norm &lt;- (x - min(x)) / (max(x) - min(x)) # Lag 1 X &lt;- x_norm[-length(x_norm)] # t Y &lt;- x_norm[-1] # t+1 # Red ELMAN set.seed(123) model_elman &lt;- elman( x = matrix(X, ncol = 1), y = matrix(Y, ncol = 1), size = c(5), learnFuncParams = c(0.1), maxit = 1000, linOut = TRUE ) # Predicción pred &lt;- predict(model_elman, matrix(X, ncol = 1)) # Desnormalizar pred_desnorm &lt;- pred * (max(x) - min(x)) + min(x) real_desnorm &lt;- Y * (max(x) - min(x)) + min(x) # Evaluación mae &lt;- mean(abs(pred_desnorm - real_desnorm)) cat(&quot;MAE:&quot;, round(mae, 2), &quot;\\n&quot;) ## MAE: 26.04 # Gráfica plot(real_desnorm, type = &quot;l&quot;, col = &quot;blue&quot;, ylab = &quot;Suicidios&quot;, main = &quot;Predicción Red ELMAN - Antioquia&quot;) lines(pred_desnorm, col = &quot;red&quot;) legend(&quot;topright&quot;, legend = c(&quot;Real&quot;, &quot;Predicho&quot;), col = c(&quot;blue&quot;, &quot;red&quot;), lty = 1) La Línea en Azul (Real): Representa los valores reales del número de suicidios por año en Antioquia. La línea en Rojo (Predicho): Muestra las predicciones generadas por la red neuronal ELMAN. En tendencia general, en la red ELMAN se logra capturar bastante bien la tendencia ascendente de los datos reales, especialmente a partir del índice 10 (posiblemente desde el año 2012 en adelante). Se puede decir que hay una coherencia general en la forma de ambas curvas, lo que indica un buen aprendizaje de patrones globales. En cuanto a errores y desviaciones: En los primeros años (índices 1 a 4), hay una sobreestimación clara por parte de la red. En los años intermedios (índices 5 a 10), la red tiende a subestimar ligeramente los valores reales. Al final de la serie, aunque el modelo predice correctamente el crecimiento, hay ligeras diferencias en magnitud. La red tiene un precisión relativa ya que no captura del todo las fluctuaciones pequeñas, pero sí el comportamiento a largo plazo. Esto sugiere que el modelo puede tener buen MAPE o RMSE global, pero errores puntuales en valores individuales. rmse &lt;- sqrt(mean((pred_desnorm - real_desnorm)^2)) mape &lt;- mean(abs((real_desnorm - pred_desnorm) / real_desnorm)) * 100 cat(&quot;MAE:&quot;, round(mae, 2), &quot;\\n&quot;) ## MAE: 26.04 cat(&quot;RMSE:&quot;, round(rmse, 2), &quot;\\n&quot;) ## RMSE: 34.37 cat(&quot;MAPE (%):&quot;, round(mape, 2), &quot;\\n&quot;) ## MAPE (%): 7.41 Evaluacion de las métricas como MAE, RMSE y MAPE. MAE (Error Absoluto Medio): 26.04 En promedio, el modelo se equivoca en aproximadamente 26 casos de suicidio por año. RMSE (Raíz del Error Cuadrático Medio): 34.37 Penaliza más fuertemente los errores grandes. Este valor es razonable si el rango de suicidios está entre 300 y 550. MAPE (Error Porcentual Medio Absoluto): 7.41% Muy buen resultado: indica que, en promedio, el modelo comete un error del 7.41% respecto al valor real. En series temporales sociales, un MAPE &lt;10% se considera muy preciso. # Último valor conocido ultimo_valor &lt;- tail(x_norm, 1) # Crear una matriz para guardar las predicciones pred_futuro_norm &lt;- numeric(2) entrada &lt;- matrix(ultimo_valor, ncol = 1) # Predicción recursiva para 2023 , 2024, 2025 for (i in 1:3) { pred &lt;- predict(model_elman, entrada) pred_futuro_norm[i] &lt;- pred entrada &lt;- matrix(pred, ncol = 1) # La entrada para el siguiente año es la predicción actual } # Desnormalizar predicciones pred_futuro &lt;- pred_futuro_norm * (max(x) - min(x)) + min(x) # Años a predecir anios_futuros &lt;- max(serie_anual$anio) + 1:3 # Mostrar resultados futuro &lt;- data.frame( anio = anios_futuros, pred_suicidios = round(pred_futuro) ) print(futuro) ## anio pred_suicidios ## 1 2023 542 ## 2 2024 557 ## 3 2025 569 # Grafica de predicciones serie_completa &lt;- c(x, pred_futuro) anios_completos &lt;- c(serie_anual$anio, anios_futuros) plot(anios_completos, serie_completa, type = &quot;l&quot;, col = &quot;darkgreen&quot;, main = &quot;Predicción ELMAN - Suicidios Antioquia&quot;, xlab = &quot;Año&quot;, ylab = &quot;Número de suicidios&quot;) lines(serie_anual$anio, x, col = &quot;blue&quot;) points(anios_futuros, pred_futuro, col = &quot;red&quot;, pch = 19) legend(&quot;topleft&quot;, legend = c(&quot;Histórico&quot;, &quot;Pronóstico&quot;), col = c(&quot;blue&quot;, &quot;red&quot;), lty = c(1, NA), pch = c(NA, 19)) 6.2 Redes Neuronales: JORDAN x &lt;- suicidios_anuales$total_suicidios x_norm &lt;- (x - min(x)) / (max(x) - min(x)) # Crear conjuntos de entrada y salida (lag = 1) input &lt;- x_norm[1:(length(x_norm) - 1)] output &lt;- x_norm[2:length(x_norm)] # Crear red JORDAN model_jordan &lt;- jordan(x = matrix(input, ncol = 1), y = matrix(output, ncol = 1), size = c(5), # 5 neuronas ocultas learnFuncParams = c(0.1), # tasa de aprendizaje maxit = 1000, linOut = TRUE) #Predicción con la red pred_jordan_norm &lt;- predict(model_jordan, matrix(input, ncol = 1)) # Desnormalizar pred_jordan &lt;- pred_jordan_norm * (max(x) - min(x)) + min(x) real &lt;- output * (max(x) - min(x)) + min(x) mae_jordan &lt;- mean(abs(real - pred_jordan)) rmse_jordan &lt;- sqrt(mean((real - pred_jordan)^2)) mape_jordan &lt;- mean(abs((real - pred_jordan) / real)) * 100 cat(&quot;MAE Jordan:&quot;, round(mae_jordan, 2), &quot;\\n&quot;) ## MAE Jordan: 24.79 cat(&quot;RMSE Jordan:&quot;, round(rmse_jordan, 2), &quot;\\n&quot;) ## RMSE Jordan: 28.75 cat(&quot;MAPE Jordan (%):&quot;, round(mape_jordan, 2), &quot;\\n&quot;) ## MAPE Jordan (%): 6.93 MAE (Error Absoluto Medio): 24.79 En promedio, el modelo se equivoca en aproximadamente 25 casos de suicidio por año. RMSE (Raíz del Error Cuadrático Medio): 28.75 Los errores más grandes elevan esta media, pero está relativamente cercana al MAE, lo que indica que no hay errores extremos. MAPE (Error Porcentual Medio Absoluto): 6.93% Excelente: menos del 10% de error relativo medio. plot(real, type = &quot;l&quot;, col = &quot;blue&quot;, lwd = 2, ylim = range(c(real, pred_jordan)), main = &quot;Predicción Red JORDAN - Antioquia&quot;, ylab = &quot;Suicidios&quot;, xlab = &quot;Index&quot;) lines(pred_jordan, col = &quot;red&quot;, lwd = 2) legend(&quot;topleft&quot;, legend = c(&quot;Real&quot;, &quot;Predicho&quot;), col = c(&quot;blue&quot;, &quot;red&quot;), lty = 1, lwd = 2) La línea roja (predicción) sigue bastante bien la tendencia y la forma de la línea azul (valores reales), especialmente en la parte ascendente (años más recientes). Esto indica que la red JORDAN ha logrado capturar la estructura temporal de la serie, incluyendo el crecimiento progresivo de los casos. En algunos años (por ejemplo, al inicio de la serie), hay cierta sobreestimación: la red predice más suicidios que los que realmente ocurrieron. La red JORDAN ajusta bien el comportamiento creciente de los suicidios en los últimos años (del año 10 en adelante), mostrando capacidad para generalizar tendencias de largo plazo. # Función para evaluar evaluar_modelo &lt;- function(real, pred) { mae &lt;- mean(abs(real - pred)) rmse &lt;- sqrt(mean((real - pred)^2)) mape &lt;- mean(abs((real - pred) / real)) * 100 return(c(MAE = mae, RMSE = rmse, MAPE = mape)) } n_pred &lt;- 3 # Queremos 3 años: 2023 , 2024 ,2025 last_input &lt;- tail(x_norm, 1) futuras_norm &lt;- numeric(n_pred) for (i in 1:n_pred) { pred &lt;- predict(model_jordan, matrix(last_input, ncol = 1)) futuras_norm[i] &lt;- pred last_input &lt;- pred # usar la predicción como nueva entrada } # Desnormalizar predicciones futuras &lt;- futuras_norm * (max(x) - min(x)) + min(x) # Mostrar resultados anios_futuros &lt;- (2022 + 1):(2022 + n_pred) data.frame(Año = anios_futuros, Predicción = round(futuras, 0)) ## Año Predicción ## 1 2023 548 ## 2 2024 563 ## 3 2025 573 ======= &gt;&gt;&gt;&gt;&gt;&gt;&gt; 4bc45fbd4866f3b4eeddd5a02f62eca471b3c622 # Unir datos reales con predicciones serie_completa &lt;- c(x, futuras) anios_completos &lt;- c(serie_anual$anio, anios_futuros) # Graficar plot(anios_completos, serie_completa, type = &quot;l&quot;, col = &quot;darkgreen&quot;, main = &quot;Predicción Red JORDAN - Suicidios en Antioquia&quot;, xlab = &quot;Año&quot;, ylab = &quot;Número de suicidios&quot;, lwd = 2) lines(serie_anual$anio, x, col = &quot;blue&quot;, lwd = 2) points(anios_futuros, futuras, col = &quot;red&quot;, pch = 19, cex = 1.5) # Agregar leyenda legend(&quot;topleft&quot;, legend = c(&quot;Histórico&quot;, &quot;Predicción&quot;), col = c(&quot;blue&quot;, &quot;red&quot;), lty = c(1, NA), pch = c(NA, 19), lwd = 2) 6.3 Desempeño de redes ELMAN y JORDAN # Crear tabla de resultados resultados &lt;- data.frame( Modelo = c(&quot;JORDAN&quot;, &quot;ELMAN&quot;), MAE = c(24.79, 26.04), RMSE = c(28.75, 34.37), MAPE = c(6.93, 7.41) ) # Mostrar en consola print(resultados) ## Modelo MAE RMSE MAPE ## 1 JORDAN 24.79 28.75 6.93 ## 2 ELMAN 26.04 34.37 7.41 En promedio, la red JORDAN se equivoca por 25 casos y la ELMAN por 26 casos al predecir el número de suicidios. La red JORDAN tiene menor dispersión de errores. El RMSE penaliza más los errores grandes, por lo tanto JORDAN comete menos errores severos. La red JORDAN tiene un error relativo promedio del 6.93 %, mientras que ELMAN del 7.41 %. Es decir, JORDAN es más precisa en términos porcentuales. Las tres métricas son mejores en la red JORDAN, lo cual indica que es el modelo más preciso y confiable para este conjunto de datos. La diferencia no es extrema, pero suficiente para justificar que JORDAN se ajusta mejor a la estructura de la serie temporal y tiene mejor capacidad predictiva. En conclusión para predecir con mayor exactitud el número de suicidios anuales, la red JORDAN ofrece una mejor aproximación general que la red ELMAN. # Convertir a formato largo para ggplot metricas_long &lt;- melt(resultados, id.vars = &quot;Modelo&quot;) # Graficar ggplot(metricas_long, aes(x = variable, y = value, fill = Modelo)) + geom_bar(stat = &quot;identity&quot;, position = &quot;dodge&quot;) + labs(title = &quot;Comparación de desempeño: Red JORDAN vs ELMAN&quot;, x = &quot;Métrica&quot;, y = &quot;Valor&quot;) + scale_fill_manual(values = c(&quot;JORDAN&quot; = &quot;steelblue&quot;, &quot;ELMAN&quot; = &quot;firebrick&quot;)) + theme_minimal(base_size = 14) "]]
