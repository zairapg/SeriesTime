[["intro.html", "Series de Tiempo Capítulo 1 Introduction", " Series de Tiempo Zaira Idaly Pizo Gurrute 2025-04-14 Capítulo 1 Introduction El pronóstico en series de tiempo es una herramienta fundamental en la estadística moderna que permite predecir el comportamiento futuro de una variable con base en sus valores pasados. A lo largo de la historia, la necesidad de anticipar el futuro ha estado presente en múltiples contextos, desde la agricultura y la astronomía, hasta los negocios y la tecnología. Hoy en día, pronosticar con precisión representa una ventaja competitiva clave para las organizaciones, ya que facilita la planificación, la toma de decisiones y la optimización de recursos. En escenarios como la estimación de la demanda energética, la predicción de ventas o la planificación de servicios, los pronósticos permiten anticiparse a los cambios y prepararse ante diferentes situaciones. Sin embargo, no todos los eventos son igual de predecibles; factores como la disponibilidad de datos, la comprensión del sistema y la estabilidad del entorno influyen en la calidad del pronóstico. Este capítulo explora los fundamentos del pronóstico en series de tiempo, sus aplicaciones, diferencias con conceptos como metas y planificación, y los pasos esenciales para construir modelos efectivos. A través del uso de métodos estadísticos y computacionales, se busca identificar patrones relevantes en los datos históricos que puedan ser utilizados para generar predicciones útiles, realistas y validadas. "],["pronóstico-de-suicidios-en-antioquia-2005-2022.html", "Capítulo 2 Pronóstico de Suicidios en Antioquia (2005-2022) 2.1 Justificación 2.2 ¿Por qué aplica para pronóstico en series de tiempo? 2.3 Valor agregado del pronóstico 2.4 Fuente de los datos y permisos de uso", " Capítulo 2 Pronóstico de Suicidios en Antioquia (2005-2022) 2.1 Justificación El presente proyecto tiene como objetivo aplicar técnicas de pronóstico en series de tiempo al conjunto de datos “Cantidad anual de suicidios reportados en el Departamento de Antioquia desde 2005”, proporcionado por la Gobernación de Antioquia. Este dataset contiene registros anuales del número de suicidios por municipio, desde el año 2005 hasta 2022, y es actualizado de forma anual. La información incluye variables como nombre del municipio, región, año, población objetivo y número de casos reportados. La elección de esta base de datos responde a la relevancia social y necesidad de planificación en salud pública. El pronóstico de la cantidad de suicidios puede contribuir a anticipar escenarios de riesgo y generar alertas tempranas, que permitan la asignación estratégica de recursos, la implementación de programas de prevención y el diseño de políticas públicas enfocadas en el bienestar emocional y mental de la población. 2.2 ¿Por qué aplica para pronóstico en series de tiempo? Este conjunto de datos es adecuado para aplicar modelos de pronóstico en series de tiempo porque: Presenta una estructura temporal clara (datos anuales desde 2005 hasta 2022), lo que permite identificar tendencias, ciclos y posibles patrones de comportamiento. La variable a pronosticar (Número de Casos) es continua y medible en el tiempo. La información está organizada por municipio, lo que permite realizar análisis a diferentes niveles de agregación (total departamental, subregional o municipal). Los datos tienen una frecuencia regular (anual) y una cobertura suficiente para construir modelos confiables. 2.3 Valor agregado del pronóstico El desarrollo de modelos de pronóstico con estos datos puede proporcionar un valor agregado al permitir: Anticipar incrementos en los casos de suicidio a nivel departamental o en municipios específicos. Identificar municipios con tendencia creciente y generar alertas para la intervención oportuna. Apoyar a los tomadores de decisiones del sector salud en la planificación preventiva, como el fortalecimiento de redes de apoyo, líneas de atención en crisis, campañas educativas, entre otros. 2.4 Fuente de los datos y permisos de uso Los datos utilizados en este proyecto son de fuente pública y oficial, provienen de: Gobernación de Antioquia – Secretaría Seccional de Salud y Protección Social Publicados en el portal de datos abiertos con licencia: Última actualización de datos: 17 de enero de 2024 Frecuencia de actualización: Anual Cobertura: Municipios del Departamento de Antioquia Link de la base de datos https://www.datos.gov.co/Salud-y-Protecci-n-Social/Cantidad-anual-de-suicidios-reportados-en-el-Depar/db67-sbus/about_data Este conjunto de datos cumple con los requisitos legales y éticos para su uso con fines académicos y de análisis.. "],["fundamentos.html", "Capítulo 3 Fundamentos Descriptivos", " Capítulo 3 Fundamentos Descriptivos Variables de la base de datos colnames(datos) ## [1] &quot;nombremunicipio&quot; &quot;codigomunicipio&quot; ## [3] &quot;ubicacion&quot; &quot;nombreregion&quot; ## [5] &quot;codigoregion&quot; &quot;anio&quot; ## [7] &quot;causamortalidad&quot; &quot;tipopoblacionobjetivo&quot; ## [9] &quot;numeropoblacionobjetivo&quot; &quot;numerocasos&quot; 3 primeros Registros de la base de datos head(datos,3) ## nombremunicipio codigomunicipio ubicacion.type ubicacion.coordinates ## 1 Abejorral 05002 Point -75.42705, 5.79145 ## 2 Abriaquí 05004 Point -76.06456, 6.63197 ## 3 Alejandría 05021 Point -75.141258, 6.376923 ## nombreregion codigoregion anio causamortalidad tipopoblacionobjetivo ## 1 ORIENTE 7 2005 Suicidios Poblacion total ## 2 OCCIDENTE 6 2005 Suicidios Poblacion total ## 3 ORIENTE 7 2005 Suicidios Poblacion total ## numeropoblacionobjetivo numerocasos ## 1 20249 2 ## 2 2690 0 ## 3 3816 0 número total de registros nrow(datos) ## [1] 1000 3.0.1 EXPLORACION DE LOS DATOS Se inicia con la exploracion del Dataset, asi como con el resumen estadistico Estructura del dataset # kable(head(datos), format = &quot;markdown&quot;) nombremunicipio codigomunicipio ubicacion nombreregion codigoregion anio causamortalidad tipopoblacionobjetivo numeropoblacionobjetivo numerocasos Abejorral 05002 Point ORIENTE 7 2005 Suicidios Poblacion total 20249 2 Abriaquí 05004 Point OCCIDENTE 6 2005 Suicidios Poblacion total 2690 0 Alejandría 05021 Point ORIENTE 7 2005 Suicidios Poblacion total 3816 0 Amagá 05030 Point SUROESTE 8 2005 Suicidios Poblacion total 27155 0 Amalfi 05031 Point NORDESTE 4 2005 Suicidios Poblacion total 20525 2 Andes 05034 Point SUROESTE 8 2005 Suicidios Poblacion total 41591 6 Se realiza la verificación de valores nulos por cada una de las variables que conforman la data. # Verificar valores nulos sum(is.na(datos)) ## [1] 0 # Verificar la cantidad de valores nulos por columna colSums(is.na(datos)) ## nombremunicipio codigomunicipio type ## 0 0 0 ## coordinates nombreregion codigoregion ## 0 0 0 ## anio causamortalidad tipopoblacionobjetivo ## 0 0 0 ## numeropoblacionobjetivo numerocasos ## 0 0 grafico_faltantes &lt;-md.pattern(datos, rotate.names = TRUE) ## /\\ /\\ ## { `---&#39; } ## { O O } ## ==&gt; V &lt;== No need for mice. This data set is completely observed. ## \\ \\|/ / ## `-----&#39; df &lt;- datos %&gt;% mutate( numerocasos = as.numeric(numerocasos), numeropoblacionobjetivo = as.numeric(numeropoblacionobjetivo), tasa_suicidios = numerocasos / numeropoblacionobjetivo * 1000 ) unique(df$numerocasos) ## [1] 2 0 6 5 1 19 4 17 9 131 3 8 13 10 126 107 7 18 11 ## [20] 124 20 12 125 16 15 123 14 122 unique(df$numeropoblacionobjetivo) ## [1] 20249 2690 3816 27155 20525 41591 7641 12519 15016 ## [10] 7415 131416 30738 10091 5196 42453 371625 6188 10246 ## [19] 16725 8783 6955 28945 7686 67994 9688 16816 4855 ## [28] 5510 43125 3971 87543 58922 9682 28279 15119 4509 ## [37] 21420 61230 24084 17701 12511 46020 41012 16241 16976 ## [46] 26287 8447 174150 22692 20031 4188 42581 11252 9789 ## [55] 6231 39541 5838 6656 4821 234973 25088 14433 12789 ## [64] 46268 52571 7066 17842 9475 7630 45548 2214494 7523 ## [73] 3736 16428 15579 20668 47989 2916 9621 8294 38953 ## [82] 16690 16248 22769 100513 8193 44443 18206 7367 15826 ## [91] 6395 11627 3103 20899 11009 22066 28772 13530 18157 ## [100] 19438 23590 22903 31025 11567 35071 38779 13385 16387 ## [109] 32943 7155 13317 5697 121885 8304 38923 17290 6324 ## [118] 11293 13419 5487 7734 41240 20025 15097 26959 22705 ## [127] 2652 4725 27308 23133 41913 5868 12102 16046 6812 ## [136] 93851 29189 9422 5911 44125 408940 5915 11386 15624 ## [145] 8407 8541 25275 7786 66186 9709 17183 5237 5903 ## [154] 35430 3910 72063 45106 9541 27165 18773 5365 21522 ## [163] 64441 22299 16254 13511 40234 49038 18685 19160 31141 ## [172] 9149 178564 24291 22663 4952 41924 9626 13575 6557 ## [181] 44247 6852 6411 5328 225978 26043 13783 14278 51714 ## [190] 56603 9845 18805 10451 8632 53126 2074195 7709 3692 ## [199] 12305 12443 20578 36835 3170 7831 8955 35049 15095 ## [208] 14439 25033 107855 8565 59931 19726 7670 20050 5962 ## [217] 13616 3271 16609 13448 19115 27833 16600 20903 21729 ## [226] 28103 23655 32006 13810 31926 37948 14351 18082 22465 ## [235] 6456 12006 5573 105057 7601 29125 13617 7849 11975 ## [244] 12088 8169 7648 38731 22241 14810 23728 22492 2649 ## [253] 4697 27482 23330 41952 5832 12040 16173 6840 95990 ## [262] 29128 9261 5865 44721 417978 5889 11315 15585 8379 ## [271] 8611 25522 7816 67238 9655 16978 5191 5787 36425 ## [280] 3888 73515 46062 9548 27061 18454 5316 21489 65487 ## [289] 22350 16457 41162 49825 18850 19514 31460 9294 182627 ## [298] 24240 22463 4976 42654 9640 13260 6565 45098 6965 ## [307] 6323 230020 26073 13826 14246 52779 57798 19012 10416 ## [316] 8597 54048 2101771 7599 3786 12415 12234 20988 37227 ## [325] 3146 7851 8917 35358 15015 14707 25279 110027 61730 ## [334] 19569 7629 19706 5939 13725 3292 16889 13398 19330 ## [343] 28042 16508 20921 21722 27934 23793 32321 13690 32395 ## [352] 37762 14387 17917 22826 6430 11903 5478 106537 7547 ## [361] 29208 13573 7728 11957 12042 8246 7642 22212 15116 ## [370] 23761 22237 2656 4679 27725 23535 41965 5813 11968 ## [379] 16384 6865 98124 29070 9113 5756 45292 427040 5859 ## [388] 11216 15563 8328 8679 25805 7872 68288 9603 16784 ## [397] 5118 5686 37438 3882 74919 47048 9584 26927 18144 ## [406] 5249 21448 66521 22339 16681 13241 42061 50612 19042 ## [415] 19857 31769 9423 186625 24185 22291 5031 43406 9623 ## [424] 12957 6526 45940 7096 6216 5327 234011 26114 13888 ## [433] 14165 53831 58962 9493 19216 10411 8552 54917 2129336 ## [442] 7557 3896 12548 12033 21396 37618 3147 7841 8886 ## [451] 35674 14887 14998 25513 112193 8638 63563 19420 7597 ## [460] 19345 5880 13873 3318 17155 13348 19565 28244 16425 ## [469] 20932 21725 27790 23989 32633 13513 32848 37557 14429 ## [478] 17731 23166 6399 11794 5435 108017 7458 29161 13578 ## [487] 7583 11964 11977 8313 7633 39083 22188 15496 23822 ## [496] 22026 2663 4694 27920 23772 42074 5793 11912 16573 ## [505] 6839 100282 29075 8941 5701 45910 436136 5852 11108 ## [514] 15555 8268 8672 26081 7892 69321 9560 16648 5072 ## [523] 5593 38430 3892 76352 48017 9591 26829 17860 5212 ## [532] 21386 67562 22391 16876 13114 42970 51409 19230 20198 ## [541] 32097 9601 190662 24163 22090 5089 44165 9663 12650 ## [550] 6536 46779 7219 6173 5336 238038 26166 13922 14067 ## [559] 54869 60156 9365 19439 10298 8480 55778 2157094 7455 ## [568] 4004 12680 11852 21821 38019 3132 8844 36002 14864 ## [577] 15272 25784 114361 65370 19290 7505 19008 14020 3340 ## [586] 17433 13312 19791 28475 16351 20965 21719 27630 24183 ## [595] 32933 13416 33310 37367 14478 17580 23541 11655 5350 ## [604] 109496 29245 13604 7482 11944 11902 8362 7604 39289 ## [613] 22217 15869 23890 21822 2655 28132 23986 42152 5795 ## [622] 11853 16733 102469 29052 8789 5652 46509 445349 5850 ## [631] 10993 15566 8256 8766 26363 7915 70414 9471 16521 ## [640] 5015 5500 39427 77825 49013 9592 26722 17588 5172 ## [649] 21381 68646 22435 17080 12990 43903 52215 19377 20537 ## [658] 32446 9773 194733 24157 21928 5140 44934 9649 12356 ## [667] 6549 47669 7374 6101 5359 242150 26255 13969 14018 ## [676] 55914 61352 9190 19617 10247 8451 56685 2185539 7341 ## [685] 4086 12825 11611 22265 38457 3130 7833 8804 36286 ## [694] 14780 15573 26045 116574 8688 67197 19157 7463 18714 ## [703] 5830 14127 3396 17737 13225 20020 28732 16243 21008 ## [712] 21746 27520 24381 33279 13291 33766 37224 14493 17393 ## [721] 23910 6379 11537 5317 111028 7328 29324 13618 7373 ## [730] 11914 11875 8438 7622 39491 22235 16158 23958 21619 ## [739] 2672 4678 28354 24156 42173 5801 11788 16908 6855 ## [748] 104703 29059 8662 5596 47107 454478 5896 10902 15526 ## [757] 8212 8811 26678 7956 71475 9437 16364 4935 5410 ## [766] 40473 3905 79274 49975 9637 26554 17280 5122 21315 ## [775] 69716 22494 17292 12845 44881 53063 19561 20870 32729 ## [784] 9892 198772 24189 21756 5219 45715 9616 12065 6523 ## [793] 48524 7433 5991 246219 26337 14055 13976 56960 62544 ## [802] 9059 19810 10226 8411 57642 2213549 7246 4180 12940 ## [811] 11423 22669 38885 3110 7904 8796 36620 14696 15873 ## [820] 26325 118781 8737 68989 19038 7424 18357 5823 14277 ## [829] 3428 17983 13187 20218 28981 16142 21045 21763 27394 ## [838] 24522 33557 13127 34239 37002 14529 17222 24285 6386 ## [847] 11451 5255 112602 7268 29371 13636 7276 11888 11787 ## [856] 8496 7605 39681 22233 24015 21371 2668 4649 28482 ## [865] 24332 42257 5784 11694 17072 6880 106833 29049 8504 ## [874] 5503 47763 463443 5904 10815 15491 8895 26952 7994 ## [883] 72507 9398 16205 4901 5304 41450 3906 80719 50949 ## [892] 9669 26421 16990 5073 21260 70742 22527 17479 12716 ## [901] 45783 53894 19751 21168 33030 10095 202750 24178 21566 ## [910] 5273 46481 9631 11770 6521 49356 7530 5900 5358 ## [919] 250184 26405 14106 13936 57935 63683 8930 20012 10166 ## [928] 8396 58528 2240690 7150 4293 13090 11227 23070 39305 ## [937] 3097 7941 8749 36977 14640 16134 26549 120936 8748 ## [946] 70783 18822 7385 18031 5775 14427 3447 18230 13165 ## [955] 20399 29166 16077 21052 21764 27227 24698 33874 13010 ## [964] 34725 36825 14576 17051 24570 6331 11342 5199 114076 ## [973] 7195 29365 13642 7146 11895 11837 8569 7595 39868 ## [982] 22219 16870 24032 # Eliminar puntos (separadores de miles), reemplazar comas decimales si fuera el caso df &lt;- df %&gt;% mutate( numerocasos = as.numeric(gsub(&quot;\\\\.&quot;, &quot;&quot;, numerocasos)), numeropoblacionobjetivo = as.numeric(gsub(&quot;\\\\.&quot;, &quot;&quot;, numeropoblacionobjetivo)) ) df &lt;- df %&gt;% mutate(tasa_suicidios = numerocasos / numeropoblacionobjetivo * 100000) # Agrupar por año serie_anual &lt;- df %&gt;% group_by(anio) %&gt;% summarise(tasa_promedio = mean(tasa_suicidios, na.rm = TRUE)) # Verificar la serie print(serie_anual) ## # A tibble: 8 × 2 ## anio tasa_promedio ## &lt;chr&gt; &lt;dbl&gt; ## 1 2005 6.17 ## 2 2006 7.16 ## 3 2007 5.91 ## 4 2008 6.11 ## 5 2009 5.87 ## 6 2010 5.39 ## 7 2011 5.92 ## 8 2012 6.47 "],["references.html", "References", " References "]]
